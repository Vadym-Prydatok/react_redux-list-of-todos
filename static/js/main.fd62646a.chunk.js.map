{"version":3,"sources":["features/currentTodo.ts","types/Status.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["ActionType","Status","actions","todo","type","set","payload","remove","currentTodoReducer","state","action","value","SetQuery","status","SetStatus","filterReducer","filter","query","all","todos","load","todosReducer","rootReducer","combineReducers","currentTodo","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","dispatch","length","className","map","classNames","id","completed","title","onClick","setTodo","TodoFilter","setQuery","actionsFilter","onChange","target","active","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","user","setUser","useEffect","userId","users","catch","href","email","name","App","setTodos","todoActions","visibleTodos","toLocaleLowerCase","includes","trim","filteredTodos","useMemo","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fd62646a.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\nexport enum ActionType {\n  remove = 'currentTodo/REMOVE',\n  set = 'currentTodo/SET',\n}\n\ntype RemoveTodoAction = { type: ActionType.remove };\ntype SetTodoAction = {\n  type: ActionType.set;\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: ActionType.remove });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: ActionType.set,\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","export enum Status {\n  all = 'all',\n  completed = 'completed',\n  active = 'active',\n}\n","import { Status } from '../types/Status';\n\nexport enum ActionType {\n  SetQuery = 'filter/QUERY',\n  SetStatus = 'filter/Status',\n}\n\ntype SetQueryAction = { type: ActionType.SetQuery, payload: string };\ntype SetStatusAction = { type: ActionType.SetStatus, payload: Status };\ntype Action = SetQueryAction | SetStatusAction;\n\nconst setQuery = (value: string): SetQueryAction => ({\n  type: ActionType.SetQuery,\n  payload: value,\n});\n\nconst setStatus = (status: Status): SetStatusAction => ({\n  type: ActionType.SetStatus,\n  payload: status,\n});\n\nexport const actions = { setQuery, setStatus };\n\nconst filterReducer = (\n  filter = {\n    query: '',\n    status: Status.all,\n  },\n  action: Action,\n) => {\n  switch (action.type) {\n    case ActionType.SetQuery:\n      return { ...filter, query: action.payload };\n\n    case ActionType.SetStatus:\n      return { ...filter, status: action.payload };\n\n    default:\n      return filter;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\nexport enum ActionType {\n  load = 'todos/LOAD',\n}\n\ntype SetTodos = { type: ActionType.load, payload: Todo[] };\n\nconst setTodos = (todos: Todo[]): SetTodos => ({\n  type: ActionType.load,\n  payload: todos,\n});\n\ntype Action = SetTodos;\n\nexport const actions = { setTodos };\n\nconst todosReducer = (\n  state: Todo[] = [],\n  action: Action,\n): Todo[] => {\n  switch (action.type) {\n    case ActionType.load:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  const dispatch = useAppDispatch();\n  const setTodo = (todo: Todo) => dispatch(actions.setTodo(todo));\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  return (\n    <>\n      {todos.length ? (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {todos.map((todo) => (\n              <tr\n                key={todo.id}\n                data-cy=\"todo\"\n                className={classNames(\n                  { 'has-background-info-light': todo.id === currentTodo?.id },\n                )}\n              >\n                <td className=\"is-vcentered\">{todo.id}</td>\n                <td className=\"is-vcentered\">\n                  {todo.completed && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )}\n                </td>\n                <td className=\"is-vcentered is-expanded\">\n                  <p\n                    className={todo.completed\n                      ? 'has-text-success'\n                      : 'has-text-danger'}\n                  >\n                    {todo.title}\n                  </p>\n                </td>\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => setTodo(todo)}\n                  >\n                    <span className=\"icon\">\n                      <i\n                        className={todo.id === currentTodo?.id\n                          ? 'far fa-eye-slash'\n                          : 'far fa-eye'}\n                      />\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )\n        : (\n          <p className=\"notification is-warning\">\n            There are no todos matching current filter criteria\n          </p>\n        )}\n    </>\n  );\n};\n","import { FC } from 'react';\nimport { Status } from '../../types/Status';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as actionsFilter } from '../../features/filter';\n\nexport const TodoFilter: FC = () => {\n  const query = useAppSelector(state => state.filter.query);\n  const dispatch = useAppDispatch();\n  const setStatus = (status: Status) => dispatch(\n    actionsFilter.setStatus(status),\n  );\n  const setQuery = (value: string) => dispatch(actionsFilter.setQuery(value));\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={({ target }) => setStatus(target.value as Status)}\n          >\n            <option value={Status.all}>All</option>\n            <option value={Status.active}>Active</option>\n            <option value={Status.completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={({ target }) => setQuery(target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            <button\n              aria-label=\"clearSearchBtn\"\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { useAppDispatch } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\n\ntype Props = {\n  todo: Todo | null;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const dispatch = useAppDispatch();\n  const removeTodo = () => dispatch(actions.removeTodo());\n\n  useEffect(() => {\n    getUser(todo?.userId || 1)\n      .then(users => setUser(users))\n      .catch(() => setUser(null));\n  }, [todo?.userId]);\n\n  return (\n    <div\n      className=\"modal is-active\"\n      data-cy=\"modal\"\n    >\n      <div className=\"modal-background\" />\n\n      {user?.id !== todo?.userId ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            <button\n              aria-label=\"delte-button\"\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={removeTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, {\n  useEffect, useMemo,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Status } from './types/Status';\nimport { actions as todoActions } from './features/todos';\n\nexport const App: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const setTodos = (todos: Todo[]) => dispatch(todoActions.setTodos(todos));\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const filter = useAppSelector(state => state.filter.status);\n  const query = useAppSelector(state => state.filter.query);\n  const todos = useAppSelector(state => state.todos);\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos);\n  }, []);\n\n  const visibleTodos = todos\n    .filter(todo => todo.title.toLocaleLowerCase()\n      .includes(query.toLocaleLowerCase().trim()));\n\n  const filteredTodos = useMemo(() => {\n    switch (filter) {\n      case Status.completed:\n        return visibleTodos.filter(todo => todo.completed === true);\n\n      case Status.active:\n        return visibleTodos.filter(todo => todo.completed === false);\n\n      default:\n        return visibleTodos;\n    }\n  }, [todos, query, filter]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0 && <Loader />}\n              <TodoList\n                todos={filteredTodos}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && <TodoModal todo={currentTodo} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}